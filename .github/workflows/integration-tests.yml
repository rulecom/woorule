name: Integration tests

on: [push, pull_request, pull_request_target]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-20.04
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: woorule

      - name: Install dependencies
        uses: shivammathur/setup-php@master
        with:
          php-version: '7.4'
          extensions: intl, mbstring, json, bcmath
          coverage: xdebug
          tools: composer:v1, php-cs-fixer, phpunit:7.5.20, phpcpd, phpmd

      - name: Set up MySQL
        run: sudo systemctl start mysql

      - name: Build the plugin package
        run: |
          cd $GITHUB_WORKSPACE/woorule
          composer install
          zip -q -r /tmp/woorule.zip ./

      - name: Build WordPress Test Environment
        run: |
          sudo systemctl start mysql
          cd $GITHUB_WORKSPACE/woorule
          bash tests/bin/install-wp-tests.sh woocommerce_test root 'root' localhost latest
          cd /tmp/wordpress
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          php wp-cli.phar core config --dbname=woocommerce_test --dbuser=root --dbpass='root' --dbhost=localhost --dbprefix=wp_
          php wp-cli.phar core install --url="http://localhost:8080" --title="Example" --admin_user=admin --admin_password=password --admin_email=info@example.com --path=/tmp/wordpress --skip-email
          php wp-cli.phar plugin install https://downloads.wordpress.org/plugin/woocommerce.8.1.1.zip --activate
          php wp-cli.phar plugin install /tmp/woorule.zip --activate

      - name: Run tests
        env:
          RULE_API_KEY: ${{ secrets.RULE_API_KEY }}
          WP_TESTS_DIR: /tmp/wordpress-tests-lib
          WP_RUN_CORE_TESTS: 1
        run: |
          sudo systemctl start mysql
          cd $GITHUB_WORKSPACE/woorule
          ./vendor/phpunit/phpunit/phpunit --configuration=./tests/phpunit.xml --bootstrap=./tests/bootstrap.php --coverage-clover=coverage.xml

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: my-artifact
          path: /tmp/wordpress/wp-content/uploads/wc-logs/*.log

      - name: Upload code coverage report to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)
